# ASP.NET
# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4

trigger:
- main

pool: Default


# - task: VSBuild@1
#   inputs:
#     solution: '$(solution)'
#     msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(build.artifactStagingDirectory)"'
#     platform: '$(buildPlatform)'
#     configuration: '$(buildConfiguration)'





variables:
  solution: '**/AppBL/*.sln'
  buildPlatform: 'Any Cpu'
  buildConfiguration: 'Release'
  solution_main: 'GACDRest'
  solution_root: 'AppBL'


  # - task: SonarCloudPrepare@1
  #   inputs:
  #     SonarCloud: 'Sonar-Cloud-Service'
  #     organization: '210503-reston-net'
  #     scannerMode: 'MSBuild'
  #     projectKey: '210503-Reston-NET_Ruffner-Garrett-P1'
  #     projectName: 'Ruffner-Garrett-P1'
  #     extraProperties: 'sonar.cs.opencover.reportsPaths=$(Build.SourcesDirectory)/**/coverage.opencover.xml'

steps:

# Restore, Build, Test, Deploy
  - task: DotNetCoreCLI@2
    displayName: Restore Project Dependencies
    inputs:
      command: 'restore'
      projects: '$(solution)'
      feedsToUse: 'select'
  
#   - task: DotNetCoreCLI@2
#     displayName: Build Projects
#     inputs:
#       command: 'build'
#       projects: '$(solution)'
    
# #V2
#   - task: DotNetCoreCLI@2
#     displayName: 'Run unit tests - $(buildConfiguration)'
#     inputs:
#       command: 'test'
#       arguments: '--configuration $(buildConfiguration) /p:CollectCoverage=true "/p:CoverletOutputFormat=\"opencover,Cobertura\"" /p:Exclude=\"[Data.Migrations.*]*\"'
#       publishTestResults: true
#       projects: '$(solution)'

#   - task: PublishCodeCoverageResults@1
#     displayName: 'Publish code coverage report'
#     inputs:
#       codeCoverageTool: Cobertura
#       summaryFileLocation: '$(Build.SourcesDirectory)/**/coverage.cobertura.xml'
#       reportDirectory: '$(Build.SourcesDirectory)/App/Tests/' 

#   - task: SonarCloudAnalyze@1
#     displayName: Run Code Analysis
#   - task: SonarCloudPublish@1
#     displayName: Publish Code Analysis
  
  - task: DotNetCoreCLI@2
    displayName: Publish
    inputs:
      command: 'publish'
      publishWebProjects: false
      zipAfterPublish: true
      projects: '**/AppBL/GACDRest/*.csproj'


  - task: AzureRmWebAppDeployment@4
    inputs:
      ConnectionType: 'AzureRM'
      azureSubscription: 'Azure subscription 1(b9ea6d04-6500-4af6-adfa-84ac2185ff53)'
      appType: 'webAppLinux'
      WebAppName: 'watches-n-such'
      packageForLinux: '$(System.DefaultWorkingDirectory)/**/*.zip'
      RuntimeStack: 'DOTNETCORE|5.0'
